/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gymgui;

import java.io.FileWriter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 *
 * @author user
 */
public class UpdateBranch extends javax.swing.JFrame {

    /**
     * Creates new form UpdateBranch
     */
    public UpdateBranch() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        branch_name = new javax.swing.JTextField();
        discard_upC_btn = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        update_branch_id = new javax.swing.JTextField();
        updateC_btn1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        client_update_desc = new javax.swing.JTextArea();
        clr_upC_btn = new javax.swing.JButton();
        branch_date = new com.toedter.calendar.JDateChooser();
        fetch_br = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        branch_mgr = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Enter the location of the branch:");

        branch_name.setText("Location");

        discard_upC_btn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        discard_upC_btn.setText("Back");
        discard_upC_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discard_upC_btnActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setText("Enter the branch's ID:");

        update_branch_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_branch_idActionPerformed(evt);
            }
        });

        updateC_btn1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        updateC_btn1.setText("Update");
        updateC_btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateC_btn1ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Enter the date the branch was opened:");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setText("Brief description:");

        client_update_desc.setColumns(20);
        client_update_desc.setRows(5);
        jScrollPane2.setViewportView(client_update_desc);

        clr_upC_btn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        clr_upC_btn.setText("Reset");
        clr_upC_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clr_upC_btnActionPerformed(evt);
            }
        });

        branch_date.setDateFormatString("yyyy/MM/dd");

        fetch_br.setText("Fetch Current Record");
        fetch_br.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fetch_brActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Update a Branch Record");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Enter the (new) manager id:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(update_branch_id, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(branch_name, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(fetch_br, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(branch_mgr, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(branch_date, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(271, 271, 271)
                        .addComponent(jLabel1)))
                .addContainerGap(77, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 119, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(updateC_btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(clr_upC_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(discard_upC_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(111, 111, 111))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(update_branch_id, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(fetch_br)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(branch_name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(branch_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(branch_mgr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateC_btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clr_upC_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(discard_upC_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void discard_upC_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discard_upC_btnActionPerformed
        // TODO add your handling code here:
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Home wind = new Home();
                wind.setVisible(true);
            }
        });

        this.dispose();
    }//GEN-LAST:event_discard_upC_btnActionPerformed

    private void update_branch_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_branch_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_update_branch_idActionPerformed

    private void updateC_btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateC_btn1ActionPerformed
        // TODO add your handling code here:
        Connection db = conn.getDB();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
        String id;
        if(update_branch_id.getText().equals(""))javax.swing.JOptionPane.showMessageDialog(rootPane, "Invalid ID");
        else {id = update_branch_id.getText();

            String sqlstring = "UPDATE branch SET blocation = ?, bstart_date = ?, mgr_id = ? WHERE bid = " + id + ";";
            try {
                PreparedStatement stmt = db.prepareStatement(sqlstring);
                stmt.setString(1, branch_name.getText());
                stmt.setString(2, dateFormat.format(branch_date.getDate()));
                stmt.setString(3, branch_mgr.getText());
                stmt.executeUpdate();

                FileWriter update_desc = new FileWriter("desc_branch.txt");
                Date now = new Date();
                String file = now.toString() + "  |" + id + "|  " +  client_update_desc.getText() + "\n";
                update_desc.append(file);
                update_desc.close();

                javax.swing.JOptionPane.showMessageDialog(rootPane, "Client record is updated sucessfully!");
                java.awt.EventQueue.invokeLater(new Runnable() {
                    public void run() {
                        Home wind = new Home();
                        wind.setVisible(true);
                    }
                });

                this.dispose();

            }
            catch (Exception ex){
                String msg = ex.toString();
                System.out.println(msg);
                if(msg.contains("Null")) javax.swing.JOptionPane.showMessageDialog(rootPane, "Invalid Entry: all fields are required. Check you have filled all the fields correctly.");
                else if(msg.contains("foreign"))javax.swing.JOptionPane.showMessageDialog(rootPane, "Invalid manager ID: The branch's manager should \n 1. be a memeber of the Executives department\n 2. should be registered at the specified branch.");
                else javax.swing.JOptionPane.showMessageDialog(rootPane, "Error occured: Check your inputs and try again.");

            }

        }
    }//GEN-LAST:event_updateC_btn1ActionPerformed

    private void clr_upC_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clr_upC_btnActionPerformed
        // TODO add your handling code here:

        branch_name.setText("");
        branch_date.setCalendar(null);
        branch_mgr.setText("");

    }//GEN-LAST:event_clr_upC_btnActionPerformed

    private void fetch_brActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fetch_brActionPerformed
        // TODO add your handling code here:
        String id;
        if(update_branch_id.getText().equals(""))javax.swing.JOptionPane.showMessageDialog(rootPane, "Invalid ID");
        else {
            id = update_branch_id.getText();
            try{
                conn = new DBConnection();
                Connection db = conn.getDB();
                Statement fetch = db.createStatement();
                ResultSet rs = fetch.executeQuery("SELECT * FROM branch WHERE bid = " + id + ";");
                rs.next();
                branch_name.setText(rs.getString("blocation"));
                branch_date.setDate(rs.getDate("bstart_date"));
                branch_mgr.setText(rs.getString("mgr_id"));

            }catch(Exception ex){
                String msg =  ex.toString();
                javax.swing.JOptionPane.showMessageDialog(rootPane, ex);
                if(msg.contains("empty result set"))javax.swing.JOptionPane.showMessageDialog(rootPane, "There is no branch with such ID");
                else javax.swing.JOptionPane.showMessageDialog(rootPane, "Oops! An Error Occured!");
            }
        }

    }//GEN-LAST:event_fetch_brActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateBranch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateBranch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateBranch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateBranch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateBranch().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser branch_date;
    private javax.swing.JTextField branch_mgr;
    private javax.swing.JTextField branch_name;
    private javax.swing.JTextArea client_update_desc;
    private javax.swing.JButton clr_upC_btn;
    private javax.swing.JButton discard_upC_btn;
    private javax.swing.JButton fetch_br;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton updateC_btn1;
    private javax.swing.JTextField update_branch_id;
    // End of variables declaration//GEN-END:variables
private DBConnection conn;
//private String[] mgrs;

//private String[] getMgrs(){
//try{
//    conn = new DBConnection();
//    Connection db = conn.getDB();
//    Statement smt =  db.createStatement();
//    ResultSet rs = smt.executeQuery("SELECT empployee.eid FROM employee LEFT JOIN dep WHERE")
//
//
//}
//catch(Exception e){}
//
//
//
//}


}
